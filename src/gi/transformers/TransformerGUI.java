package gi.transformers;

import java.util.ArrayList;

/*
 * FormulaTransformerGUI.java
 *
 * Created on October 26, 2008, 1:30 PM
 */

import javax.swing.JOptionPane;

/**
 *
 * @author  Administrator
 */
public class TransformerGUI extends javax.swing.JFrame {

    private PriorityInfixToPrefix twbToLotrec;
    private FormulaTransformer lotrecToTWB;

    /** Creates new form FormulaTransformerGUI */
    public TransformerGUI() {
        ArrayList<Connector> connList = new ArrayList<Connector>();
        connList.add(new Connector("not", 1, "~_", 3));
        connList.add(new Connector("nec", 1, "box_", 3));
        connList.add(new Connector("pos", 1, "dia_", 3));
        connList.add(new Connector("and", 2, "_&_", 2));
        connList.add(new Connector("or", 2, "_v_", 2));
        connList.add(new Connector("imp", 2, "_->_", 1));
        connList.add(new Connector("equiv", 2, "_<->_", 0));
        twbToLotrec = new PriorityInfixToPrefix(connList);
        lotrecToTWB = new LoTRECToTWB(connList);
        try {
            twbToLotrec.compile();
            lotrecToTWB.compile();
        } catch (Exception ex) {
            System.out.println("Error while transforming from infix to prefix:\n " + ex.getMessage());
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Grammar compilation error:", JOptionPane.ERROR_MESSAGE);
        }
        initComponents();
        Object[][] data = new Object[connList.size()][4];
        for (Connector c : connList) {
            data[connList.indexOf(c)][0] = c.getName();
            data[connList.indexOf(c)][1] = c.getArity();
            data[connList.indexOf(c)][2] = c.getOutput();
            data[connList.indexOf(c)][3] = c.getPriority();
        }
        tblConnectors.setModel(new javax.swing.table.DefaultTableModel(
                data,
                new String[]{
                    "Name", "Arity", "Output", "Priority"
                }));
        tblConnectors.setEnabled(false);
    }

    public String toPrefix(String formulaInfixCode) {
        String formulaCode = null;
        try {
            formulaCode = twbToLotrec.transform(formulaInfixCode);
        } catch (Exception ex) {
            System.out.println("Error: while transforming from infix to prefix:\n " + ex.getMessage());
        }
        return formulaCode;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblConnectors = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infixFormula = new javax.swing.JTextArea();
        toPrefix = new javax.swing.JButton();
        toInfix = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        prefixFormula = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Formula Transformer");

        tblConnectors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prefix name", "Arity", "Infix form", "Priority"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblConnectors);

        jLabel1.setText("Infix formula:");

        infixFormula.setColumns(20);
        infixFormula.setFont(new java.awt.Font("Arial", 0, 12));
        infixFormula.setRows(5);
        infixFormula.setText("(([] (p & q)) -> (~ r))");
        jScrollPane1.setViewportView(infixFormula);

        toPrefix.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gi/transformers/images/arrow-down.PNG"))); // NOI18N
        toPrefix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toPrefixActionPerformed(evt);
            }
        });

        toInfix.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gi/transformers/images/arrow-up.PNG"))); // NOI18N
        toInfix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toInfixActionPerformed(evt);
            }
        });

        jLabel2.setText("Prefix formula:");

        prefixFormula.setColumns(20);
        prefixFormula.setFont(new java.awt.Font("Arial", 0, 12));
        prefixFormula.setRows(5);
        prefixFormula.setText("(imp (nec (and P Q)) (not R))");
        jScrollPane2.setViewportView(prefixFormula);

        jLabel3.setText("Connectors:");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(104, 104, 104)
                                        .add(toPrefix)
                                        .add(18, 18, 18)
                                        .add(toInfix))
                                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)))
                            .add(jLabel2)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(30, 30, 30)
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 305, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel3)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(6, 6, 6)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(37, 37, 37)
                        .add(jLabel2))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(toPrefix)
                            .add(toInfix))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void toPrefixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toPrefixActionPerformed
    try {
        prefixFormula.setText(twbToLotrec.transform(infixFormula.getText()));
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage(), "Interpreter error:", JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_toPrefixActionPerformed

private void toInfixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toInfixActionPerformed
    try {
        infixFormula.setText(lotrecToTWB.transform(prefixFormula.getText()));
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage(), "Interpreter error:", JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_toInfixActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TransformerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea infixFormula;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea prefixFormula;
    private javax.swing.JTable tblConnectors;
    private javax.swing.JButton toInfix;
    private javax.swing.JButton toPrefix;
    // End of variables declaration//GEN-END:variables
}
