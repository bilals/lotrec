/*
 * ConRulTabsPanel.java
 *
 * Created on 30 octobre 2007, 11:26
 */

package lotrec.gui.logicdefpane;

import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import lotrec.dataStructure.Logic;
import lotrec.dataStructure.expression.Connector;
import lotrec.gui.models.ConnectorsTableModel;
import lotrec.resources.ResourcesProvider;

/**
 * A reserve version with connectors displayed in a JTable
 * I'm trying to replace it with a version using a JList
 * @author  said
 */
public class ConnTabPanel_1 extends javax.swing.JPanel {
    
    Logic logic;
    java.util.ResourceBundle resource;
    ConnectorsTableModel connectorsTableModel;
    
    /** Creates new form ConRulTabsPanel */
    public ConnTabPanel_1(Logic logic) {
        this.logic = logic;
        initComponents();
        //Important to make the JScrollPane really opaque!!
        scrlConnTable.getViewport().setOpaque(false);
        //ColumnHeader opacity is handled by calling setExtraOpacity()
        //in the class LogicDefTab then in the class OpenLogicDialog
        //It not seems to work all right!!
        
        connectorsTableModel = new ConnectorsTableModel(logic.getConnectors());
        tblConnTable.setModel(connectorsTableModel);
        //to select the first row
        tblConnTable.setRowSelectionInterval(0,0);
        //to change the Selected Connector Info
        tblConnTable.getSelectionModel().addListSelectionListener(
                new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent e){
                int conNum= tblConnTable.getSelectedRow();
                displaySelectedConnector(conNum);
            }
        });
        refresh();
    }

    public void setExtraOpacity() {
        scrlConnTable.getColumnHeader().setOpaque(false);
    }    
    
    public void displaySelectedConnector(int conNum){
        if(conNum!=-1){
            Connector conn = (Connector)logic.getConnectors().get(conNum);
            txfName.setText(conn.getName());
            txfArity.setText(String.valueOf(conn.getArity()));
            txfOutputFormat.setText(conn.getOutString());
            txfPriority.setText(String.valueOf(conn.getPriority()));
            chkbxAssociative.setSelected(conn.isAssociative());
            txaComments.setText(conn.getComment());
        }
    }
    
    public void refresh(){
        resource = java.util.ResourceBundle.getBundle("lotrec.resources.LoadedLogicsPanel",ResourcesProvider.getCurrentLocale());
        pnlConnList.setBorder(javax.swing.BorderFactory.createTitledBorder(resource.getString("ConnTab.ConnectorsList")));
        pnlSelectedConnector.setBorder(javax.swing.BorderFactory.createTitledBorder(resource.getString("ConnTab.SelectedConnector")));
        lblName.setText(resource.getString("ConnTab.Titles.Name"));
        lblArity.setText(resource.getString("ConnTab.Titles.Arity"));
        chkbxAssociative.setText(resource.getString("ConnTab.Titles.Associative"));
        lblOutputFormat.setText(resource.getString("ConnTab.Titles.OutputFormat"));
        lblPriority.setText(resource.getString("ConnTab.Titles.Priority"));
        lblComments.setText(resource.getString("ConnTab.Titles.Comments"));
        //We should save the selected row number before the model refresh then restore it after it.
        //Cause during the refresh, & because of the fireTableDataChanged() and fireTableStructureChanged()
        //methods, the selection is cleared. And then should be restored and affected.
        int conNum = tblConnTable.getSelectedRow();
        connectorsTableModel.refresh();
        tblConnTable.setRowSelectionInterval(conNum,conNum);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        pnlSelectedConnector = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblArity = new javax.swing.JLabel();
        txfName = new javax.swing.JTextField();
        txfArity = new javax.swing.JTextField();
        chkbxAssociative = new javax.swing.JCheckBox();
        lblOutputFormat = new javax.swing.JLabel();
        lblPriority = new javax.swing.JLabel();
        lblComments = new javax.swing.JLabel();
        txfOutputFormat = new javax.swing.JTextField();
        txfPriority = new javax.swing.JTextField();
        scrlComments = new javax.swing.JScrollPane();
        txaComments = new javax.swing.JTextArea();
        pnlConnList = new javax.swing.JPanel();
        scrlConnTable = new javax.swing.JScrollPane();
        tblConnTable = new javax.swing.JTable();

        setOpaque(false);
        pnlSelectedConnector.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected Connector"));
        pnlSelectedConnector.setOpaque(false);
        lblName.setText("Name");

        lblArity.setText("Arity");

        txfName.setText("<Name>");

        txfArity.setText("<Arity>");

        chkbxAssociative.setText("Associative");
        chkbxAssociative.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkbxAssociative.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chkbxAssociative.setOpaque(false);

        lblOutputFormat.setText("Output Format");

        lblPriority.setText("Priority");

        lblComments.setText("Comments");

        txfOutputFormat.setText("<Output Format>");

        txfPriority.setText("<Priority>");

        txaComments.setColumns(20);
        txaComments.setFont(new java.awt.Font("Tahoma", 0, 11));
        txaComments.setRows(5);
        txaComments.setText("<Comments>");
        txaComments.setMargin(new java.awt.Insets(1, 5, 2, 4));
        scrlComments.setViewportView(txaComments);

        org.jdesktop.layout.GroupLayout pnlSelectedConnectorLayout = new org.jdesktop.layout.GroupLayout(pnlSelectedConnector);
        pnlSelectedConnector.setLayout(pnlSelectedConnectorLayout);
        pnlSelectedConnectorLayout.setHorizontalGroup(
            pnlSelectedConnectorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlSelectedConnectorLayout.createSequentialGroup()
                .add(pnlSelectedConnectorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, pnlSelectedConnectorLayout.createSequentialGroup()
                        .add(lblComments)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(scrlComments, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE))
                    .add(pnlSelectedConnectorLayout.createSequentialGroup()
                        .add(pnlSelectedConnectorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblName)
                            .add(lblArity))
                        .add(27, 27, 27)
                        .add(pnlSelectedConnectorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txfName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, txfArity, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .add(chkbxAssociative))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlSelectedConnectorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblOutputFormat)
                            .add(lblPriority))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlSelectedConnectorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txfPriority, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .add(txfOutputFormat, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))))
                .addContainerGap(237, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        pnlSelectedConnectorLayout.setVerticalGroup(
            pnlSelectedConnectorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlSelectedConnectorLayout.createSequentialGroup()
                .add(pnlSelectedConnectorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblName)
                    .add(lblOutputFormat)
                    .add(txfOutputFormat, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txfName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlSelectedConnectorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblArity)
                    .add(lblPriority)
                    .add(txfArity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txfPriority, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chkbxAssociative)
                .add(4, 4, 4)
                .add(pnlSelectedConnectorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblComments)
                    .add(scrlComments, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        pnlConnList.setBorder(javax.swing.BorderFactory.createTitledBorder("Connectors List"));
        pnlConnList.setToolTipText("Conn List Panel");
        pnlConnList.setOpaque(false);
        scrlConnTable.setToolTipText("scroll");
        scrlConnTable.setOpaque(false);
        tblConnTable.setToolTipText("kawa");
        tblConnTable.setOpaque(false);
        scrlConnTable.setViewportView(tblConnTable);

        org.jdesktop.layout.GroupLayout pnlConnListLayout = new org.jdesktop.layout.GroupLayout(pnlConnList);
        pnlConnList.setLayout(pnlConnListLayout);
        pnlConnListLayout.setHorizontalGroup(
            pnlConnListLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(scrlConnTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
        );
        pnlConnListLayout.setVerticalGroup(
            pnlConnListLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, scrlConnTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlSelectedConnector, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(pnlConnList, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(pnlSelectedConnector, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlConnList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkbxAssociative;
    private javax.swing.JLabel lblArity;
    private javax.swing.JLabel lblComments;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOutputFormat;
    private javax.swing.JLabel lblPriority;
    private javax.swing.JPanel pnlConnList;
    private javax.swing.JPanel pnlSelectedConnector;
    private javax.swing.JScrollPane scrlComments;
    private javax.swing.JScrollPane scrlConnTable;
    private javax.swing.JTable tblConnTable;
    private javax.swing.JTextArea txaComments;
    private javax.swing.JTextField txfArity;
    private javax.swing.JTextField txfName;
    private javax.swing.JTextField txfOutputFormat;
    private javax.swing.JTextField txfPriority;
    // End of variables declaration//GEN-END:variables
    
}
