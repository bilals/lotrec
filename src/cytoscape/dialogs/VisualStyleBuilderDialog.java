/*
 * VisualStyleBuilderDialog.java
 *
 * Created on 2006/04/14, 16:12
 */

package cytoscape.dialogs;

import java.util.Iterator;
import java.util.Set;

import javax.swing.JButton;
import javax.swing.JOptionPane;

import cytoscape.Cytoscape;
import cytoscape.data.readers.GMLReader;
import cytoscape.data.readers.GraphReader;

/**
 * 
 * @author kono
 */
public class VisualStyleBuilderDialog extends javax.swing.JDialog {

	private String mapperSuffix;
	private String VSName;
	private GMLReader gmlReader;

	/** Creates new form VisualStyleBuilderDialog */

	public VisualStyleBuilderDialog(String networkName, GraphReader reader,
			java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		gmlReader = (GMLReader) reader;

		String modName = "";
		String[] removeDot = networkName.split("\\.");
		for (int idx = 0; idx < removeDot.length; idx++) {
			modName = modName + removeDot[idx];
			if (idx != removeDot.length - 1) {
				modName = modName + "_";
			}
		}
		mapperSuffix = " for " + modName;
		VSName = "GML style for " + modName;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">
	private void initComponents() {

		this.setTitle("Visual Style Builder");

		titleLabel = new javax.swing.JLabel();
		jSeparator1 = new javax.swing.JSeparator();
		styleNameTextField = new javax.swing.JTextField();
		styleNameLabel = new javax.swing.JLabel();
		generateButton = new javax.swing.JButton();
		skipButton = new JButton();
		mapperLabel = new javax.swing.JLabel();
		mapperTextField = new javax.swing.JTextField();
		messageScrollPane = new javax.swing.JScrollPane();
		messageEditorPane = new javax.swing.JEditorPane();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		titleLabel.setText("Visual Style Builder");
		titleLabel.setFont(new java.awt.Font("SansSerif", 2, 14));

		styleNameLabel.setText("New Style Name:");
		styleNameTextField.setText(VSName);

		mapperTextField.setText(mapperSuffix);

		generateButton.setText("Generate VS");
		generateButton.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				generateButtonMouseClicked(evt);
			}
		});

		skipButton.setText("Skip");
		skipButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				skipButtonActionPerformed(evt);
			}
		});

		mapperLabel.setText("Mapper Suffix:");

		messageEditorPane.setBackground(new java.awt.Color(244, 244, 244));
		messageEditorPane.setEditable(false);
		messageEditorPane.setFont(new java.awt.Font("SansSerif", 1, 12));
		messageEditorPane
				.setText("This function creates new Visual Style based on GML information.  "
						+ "For each node/edge, it will assign individual visual properties, such "
						+ "as node color, shape, border, etc.\n\nNote: for large networks, visual "
						+ "mapper can be slow since this will create visual properties for all objects."
						+ "\n\n DO NOT USE DOT (.) FOR THESE NAMES.");
		messageScrollPane.setViewportView(messageEditorPane);

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING)
														.add(messageScrollPane)
														.add(
																jSeparator1,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																377,
																Short.MAX_VALUE)
														.add(
																titleLabel,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																338,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(
																layout
																		.createSequentialGroup()
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.LEADING,
																								false)
																						.add(
																								mapperLabel,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE)
																						.add(
																								styleNameLabel,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE))
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.LEADING)
																						.add(
																								mapperTextField,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								262,
																								Short.MAX_VALUE)
																						.add(
																								styleNameTextField,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								262,
																								Short.MAX_VALUE)))
														.add(
																org.jdesktop.layout.GroupLayout.TRAILING,
																layout
																		.createSequentialGroup()
																		.add(
																				generateButton)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				skipButton)))
										.addContainerGap()));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.add(titleLabel)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												jSeparator1,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												10,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(styleNameLabel)
														.add(
																styleNameTextField,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(
																mapperTextField,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(mapperLabel))
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												messageScrollPane,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												155, Short.MAX_VALUE)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(skipButton).add(
																generateButton))
										.addContainerGap()));
		pack();
	}// </editor-fold>

	private void generateButtonMouseClicked(java.awt.event.MouseEvent evt) {
		boolean validNames = true;

		VSName = styleNameTextField.getText();
		mapperSuffix = mapperTextField.getText();

		if (checkDuplicateNames() == false) {
			try {
				gmlReader.applyMaps(mapperSuffix, VSName);
			} catch (cytoscape.visual.DuplicateCalculatorNameException e) {

				JOptionPane.showMessageDialog(this,
						"The Calculator Name already exists.\n"
								+ "Please change the suffix.",
						"Duplicate Name!", JOptionPane.INFORMATION_MESSAGE);

				Cytoscape.getVisualMappingManager().getCalculatorCatalog()
						.removeVisualStyle(VSName);
				validNames = false;
			}
			if (validNames == true) {
				dispose();
			}

		} else {
			// Display Error Message
			JOptionPane.showMessageDialog(this,
					"Error: The Visual Style Name already exists.",
					"Duplicate Name!", JOptionPane.INFORMATION_MESSAGE);
		}
	}

	private void skipButtonActionPerformed(java.awt.event.ActionEvent evt) {
		dispose();
	}

	private boolean checkDuplicateNames() {

		// Check duplicate VS name first
		Set vsNames = Cytoscape.getVisualMappingManager()
				.getCalculatorCatalog().getVisualStyleNames();
		Iterator it = vsNames.iterator();
		while (it.hasNext()) {
			String curName = (String) it.next();
			if (curName.equals(VSName)) {
				return true;
			}
		}

		// Check calculator names
		Cytoscape.getVisualMappingManager().getCalculatorCatalog();
		return false;
	}

	// Variables declaration - do not modify
	private javax.swing.JButton generateButton;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JLabel mapperLabel;
	private javax.swing.JTextField mapperTextField;
	private javax.swing.JEditorPane messageEditorPane;
	private javax.swing.JScrollPane messageScrollPane;
	private javax.swing.JLabel styleNameLabel;
	private javax.swing.JTextField styleNameTextField;
	private javax.swing.JLabel titleLabel;
	private javax.swing.JButton skipButton;
	// End of variables declaration

}
